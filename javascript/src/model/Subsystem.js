/**
 * ALICE Bookkeeping
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Subsystem model module.
 * @module model/Subsystem
 * @version 0.0.0
 */
class Subsystem {
    /**
     * Constructs a new <code>Subsystem</code>.
     * A label attached to something for the purpose of identification.
     * @alias module:model/Subsystem
     * @param id {Number} The unique identifier of this entity.
     * @param name {String} The label value of the subsystem.
     */
    constructor(id, name) { 
        
        Subsystem.initialize(this, id, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, name) { 
        obj['id'] = id;
        obj['name'] = name;
    }

    /**
     * Constructs a <code>Subsystem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Subsystem} obj Optional instance to populate.
     * @return {module:model/Subsystem} The populated <code>Subsystem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Subsystem();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'String');
            }
            if (data.hasOwnProperty('updateAt')) {
                obj['updateAt'] = ApiClient.convertToType(data['updateAt'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The unique identifier of this entity.
 * @member {Number} id
 */
Subsystem.prototype['id'] = undefined;

/**
 * The label value of the subsystem.
 * @member {String} name
 */
Subsystem.prototype['name'] = undefined;

/**
 * Date when the subsystem was created.
 * @member {String} createdAt
 */
Subsystem.prototype['createdAt'] = undefined;

/**
 * Date when the subsystem was last updated.
 * @member {String} updateAt
 */
Subsystem.prototype['updateAt'] = undefined;






export default Subsystem;

