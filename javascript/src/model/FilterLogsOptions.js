/**
 * ALICE Bookkeeping
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FilterLogsTagOptions from './FilterLogsTagOptions';
import LogOrigin from './LogOrigin';

/**
 * The FilterLogsOptions model module.
 * @module model/FilterLogsOptions
 * @version 0.0.0
 */
class FilterLogsOptions {
    /**
     * Constructs a new <code>FilterLogsOptions</code>.
     * Specifies the log related filter requirements for a request.
     * @alias module:model/FilterLogsOptions
     */
    constructor() { 
        
        FilterLogsOptions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FilterLogsOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FilterLogsOptions} obj Optional instance to populate.
     * @return {module:model/FilterLogsOptions} The populated <code>FilterLogsOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FilterLogsOptions();

            if (data.hasOwnProperty('origin')) {
                obj['origin'] = LogOrigin.constructFromObject(data['origin']);
            }
            if (data.hasOwnProperty('parentLog')) {
                obj['parentLog'] = ApiClient.convertToType(data['parentLog'], 'Number');
            }
            if (data.hasOwnProperty('rootLog')) {
                obj['rootLog'] = ApiClient.convertToType(data['rootLog'], 'Number');
            }
            if (data.hasOwnProperty('tag')) {
                obj['tag'] = FilterLogsTagOptions.constructFromObject(data['tag']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/LogOrigin} origin
 */
FilterLogsOptions.prototype['origin'] = undefined;

/**
 * The unique identifier of this entity.
 * @member {Number} parentLog
 */
FilterLogsOptions.prototype['parentLog'] = undefined;

/**
 * The unique identifier of this entity.
 * @member {Number} rootLog
 */
FilterLogsOptions.prototype['rootLog'] = undefined;

/**
 * @member {module:model/FilterLogsTagOptions} tag
 */
FilterLogsOptions.prototype['tag'] = undefined;






export default FilterLogsOptions;

