/**
 * ALICE Bookkeeping
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Log.h
 *
 * Describes an intervention or an event that happened.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_Log_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_Log_H_


#include "../ModelBase.h"

#include "LogSubtype.h"
#include "Tag.h"
#include <cpprest/details/basic_types.h>
#include "LogOrigin.h"
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// Describes an intervention or an event that happened.
/// </summary>
class  Log
    : public ModelBase
{
public:
    Log();
    virtual ~Log();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Log members

    /// <summary>
    /// The unique identifier of this entity.
    /// </summary>
    int64_t getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(int64_t value);

    /// <summary>
    /// Name of the author.
    /// </summary>
    utility::string_t getAuthorId() const;
    bool authorIdIsSet() const;
    void unsetAuthorId();

    void setAuthorId(const utility::string_t& value);

    /// <summary>
    /// Title of the log.
    /// </summary>
    utility::string_t getTitle() const;
    bool titleIsSet() const;
    void unsetTitle();

    void setTitle(const utility::string_t& value);

    /// <summary>
    /// Body of the log.
    /// </summary>
    utility::string_t getText() const;
    bool textIsSet() const;
    void unsetText();

    void setText(const utility::string_t& value);

    /// <summary>
    /// Unix timestamp of the creation date time.
    /// </summary>
    int64_t getCreationTime() const;
    bool creationTimeIsSet() const;
    void unsetCreationTime();

    void setCreationTime(int64_t value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<LogOrigin> getOrigin() const;
    bool originIsSet() const;
    void unsetOrigin();

    void setOrigin(const std::shared_ptr<LogOrigin>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<LogSubtype> getSubtype() const;
    bool subtypeIsSet() const;
    void unsetSubtype();

    void setSubtype(const std::shared_ptr<LogSubtype>& value);

    /// <summary>
    /// A list of Tag objects.
    /// </summary>
    std::vector<std::shared_ptr<Tag>>& getTags();
    bool tagsIsSet() const;
    void unsetTags();

    void setTags(const std::vector<std::shared_ptr<Tag>>& value);

    /// <summary>
    /// The unique identifier of this entity.
    /// </summary>
    int64_t getRootLogId() const;
    bool rootLogIdIsSet() const;
    void unsetRootLogId();

    void setRootLogId(int64_t value);

    /// <summary>
    /// The unique identifier of this entity.
    /// </summary>
    int64_t getParentLogId() const;
    bool parentLogIdIsSet() const;
    void unsetParentLogId();

    void setParentLogId(int64_t value);


protected:
    int64_t m_Id;
    bool m_IdIsSet;
    utility::string_t m_AuthorId;
    bool m_AuthorIdIsSet;
    utility::string_t m_Title;
    bool m_TitleIsSet;
    utility::string_t m_Text;
    bool m_TextIsSet;
    int64_t m_CreationTime;
    bool m_CreationTimeIsSet;
    std::shared_ptr<LogOrigin> m_Origin;
    bool m_OriginIsSet;
    std::shared_ptr<LogSubtype> m_Subtype;
    bool m_SubtypeIsSet;
    std::vector<std::shared_ptr<Tag>> m_Tags;
    bool m_TagsIsSet;
    int64_t m_RootLogId;
    bool m_RootLogIdIsSet;
    int64_t m_ParentLogId;
    bool m_ParentLogIdIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_Log_H_ */
