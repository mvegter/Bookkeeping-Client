openapi: 3.0.0
info:
  title: ALICE Bookkeeping
  version: 0.0.0
servers:
- url: /api
paths:
  /:
    get:
      operationId: getServerInformation
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiInformation'
          description: API information
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Service Unavailable
      summary: Get server information
  /logs:
    get:
      operationId: listLogs
      parameters:
      - description: Filter logs by their origin
        explode: true
        in: query
        name: filter[origin]
        required: false
        schema:
          enum:
          - human
          - process
          type: string
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: page[offset]
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: The numbers of items to return.
        explode: true
        in: query
        name: page[limit]
        required: false
        schema:
          default: 100
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The sort order of the returned items.
        explode: false
        in: query
        name: sort
        required: false
        schema:
          default:
          - -id
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfLogsResponse'
          description: Expected response to a valid request.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Bad Request
      summary: List all logs
      tags:
      - log
    post:
      operationId: createLog
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogResponse'
          description: Expected response to a valid request.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Bad Request
      summary: Adds a new log
      tags:
      - log
  /logs/{id}:
    get:
      operationId: getLogById
      parameters:
      - description: The id of the log to retrieve
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogResponse'
          description: Expected response to a valid request.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Not Found
      summary: Gets a log by Id
      tags:
      - log
  /status:
    get:
      operationId: getDeployInformation
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployInformation'
          description: Deploy information
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Service Unavailable
      summary: Get deploy information
components:
  parameters:
    filterOrigin:
      description: Filter logs by their origin
      explode: true
      in: query
      name: filter[origin]
      required: false
      schema:
        enum:
        - human
        - process
        type: string
      style: form
    pageLimit:
      description: The numbers of items to return.
      explode: true
      in: query
      name: page[limit]
      required: false
      schema:
        default: 100
        maximum: 100
        minimum: 1
        type: integer
      style: form
    pageOffset:
      description: The number of items to skip before starting to collect the result
        set.
      explode: true
      in: query
      name: page[offset]
      required: false
      schema:
        default: 0
        minimum: 0
        type: integer
      style: form
    sortLogs:
      description: The sort order of the returned items.
      explode: false
      in: query
      name: sort
      required: false
      schema:
        default:
        - -id
        items:
          type: string
        type: array
      style: form
  responses:
    ArrayOfLogs:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ArrayOfLogsResponse'
      description: Expected response to a valid request.
    BadRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
      description: Bad Request
    Log:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LogResponse'
      description: Expected response to a valid request.
    NotFound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
      description: Not Found
    ServiceUnavailable:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
      description: Service Unavailable
  schemas:
    ApiInformation:
      description: API information
      example:
        name: name
        version: version
      properties:
        name:
          description: Name of the API
          type: string
        version:
          description: Version of the API
          type: string
      required:
      - name
      - version
      type: object
    ArrayOfLogs:
      description: A list of Log objects.
      items:
        $ref: '#/components/schemas/Log'
      type: array
    ArrayOfLogsResponse:
      description: Response containing multiple logs.
      example:
        data:
        - origin: human
          title: title
          entryId: 0
          tags:
          - null
          - null
        - origin: human
          title: title
          entryId: 0
          tags:
          - null
          - null
      properties:
        data:
          description: A list of Log objects.
          items:
            $ref: '#/components/schemas/Log'
          type: array
      required:
      - data
      type: object
    ArrayOfTags:
      description: A list of Tag objects.
      items:
        $ref: '#/components/schemas/Tag'
      type: array
    DeployInformation:
      description: Deploy information
      example:
        start: 6.027456183070403
        age: 0.8008281904610115
      properties:
        age:
          description: The number of seconds that the server is online.
          type: number
        start:
          description: The unix timestamp of the moment that the the server went online.
          type: number
      required:
      - age
      - start
      type: object
    Error:
      description: An Error object.
      properties:
        status:
          description: The HTTP status code applicable to this problem.
          type: string
        title:
          description: A short, human-readable summary of the problem.
          type: string
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem.
          type: string
      required:
      - status
      - title
      type: object
    Errors:
      description: A list of Error objects.
      properties:
        errors:
          description: A list of Error objects.
          items:
            $ref: '#/components/schemas/Error'
          minItems: 1
          type: array
      required:
      - errors
      type: object
    Log:
      description: Describes an intervention or an event that happened.
      example:
        origin: human
        title: title
        entryId: 0
        tags:
        - null
        - null
      properties:
        entryId:
          description: Id of the log.
          format: int64
          type: integer
        title:
          description: Title of the log.
          type: string
        origin:
          description: Type of creator.
          enum:
          - human
          - process
          type: string
        tags:
          description: A list of Tag objects.
          items:
            $ref: '#/components/schemas/Tag'
          type: array
      required:
      - entryId
      - origin
      - tags
      - title
      type: object
    LogResponse:
      description: Response containing a single log.
      example:
        data:
          origin: human
          title: title
          entryId: 0
          tags:
          - null
          - null
      properties:
        data:
          $ref: '#/components/schemas/Log'
      required:
      - data
      type: object
    Tag:
      description: A label attached to something for the purpose of identification.
      type: string
