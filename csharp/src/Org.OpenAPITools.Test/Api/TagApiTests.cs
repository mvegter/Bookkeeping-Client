/* 
 * ALICE Bookkeeping
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing TagApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class TagApiTests
    {
        private TagApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new TagApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of TagApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' TagApi
            //Assert.IsInstanceOf(typeof(TagApi), instance);
        }

        
        /// <summary>
        /// Test CreateTag
        /// </summary>
        [Test]
        public void CreateTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateTag createTag = null;
            //var response = instance.CreateTag(createTag);
            //Assert.IsInstanceOf(typeof(TagResponse), response, "response is TagResponse");
        }
        
        /// <summary>
        /// Test GetLogsByTagId
        /// </summary>
        [Test]
        public void GetLogsByTagIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long tagId = null;
            //var response = instance.GetLogsByTagId(tagId);
            //Assert.IsInstanceOf(typeof(ArrayOfLogsResponse), response, "response is ArrayOfLogsResponse");
        }
        
        /// <summary>
        /// Test GetTagById
        /// </summary>
        [Test]
        public void GetTagByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long tagId = null;
            //var response = instance.GetTagById(tagId);
            //Assert.IsInstanceOf(typeof(TagResponse), response, "response is TagResponse");
        }
        
        /// <summary>
        /// Test ListTags
        /// </summary>
        [Test]
        public void ListTagsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? pageOffset = null;
            //int? pageLimit = null;
            //var response = instance.ListTags(pageOffset, pageLimit);
            //Assert.IsInstanceOf(typeof(ArrayOfTagsResponse), response, "response is ArrayOfTagsResponse");
        }
        
    }

}
