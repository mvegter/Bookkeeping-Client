/*
 * ALICE Bookkeeping
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.FilterLogsTagOptions;
import org.openapitools.client.model.LogOrigin;

/**
 * Specifies the log related filter requirements for a request.
 */
@ApiModel(description = "Specifies the log related filter requirements for a request.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-06-07T12:27:51.952+01:00[Europe/London]")
public class FilterLogsOptions {
  public static final String SERIALIZED_NAME_ORIGIN = "origin";
  @SerializedName(SERIALIZED_NAME_ORIGIN)
  private LogOrigin origin;

  public static final String SERIALIZED_NAME_PARENT_LOG = "parentLog";
  @SerializedName(SERIALIZED_NAME_PARENT_LOG)
  private Long parentLog;

  public static final String SERIALIZED_NAME_ROOT_LOG = "rootLog";
  @SerializedName(SERIALIZED_NAME_ROOT_LOG)
  private Long rootLog;

  public static final String SERIALIZED_NAME_TAG = "tag";
  @SerializedName(SERIALIZED_NAME_TAG)
  private FilterLogsTagOptions tag;


  public FilterLogsOptions origin(LogOrigin origin) {
    
    this.origin = origin;
    return this;
  }

   /**
   * Get origin
   * @return origin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LogOrigin getOrigin() {
    return origin;
  }


  public void setOrigin(LogOrigin origin) {
    this.origin = origin;
  }


  public FilterLogsOptions parentLog(Long parentLog) {
    
    this.parentLog = parentLog;
    return this;
  }

   /**
   * The unique identifier of this entity.
   * minimum: 1
   * @return parentLog
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The unique identifier of this entity.")

  public Long getParentLog() {
    return parentLog;
  }


  public void setParentLog(Long parentLog) {
    this.parentLog = parentLog;
  }


  public FilterLogsOptions rootLog(Long rootLog) {
    
    this.rootLog = rootLog;
    return this;
  }

   /**
   * The unique identifier of this entity.
   * minimum: 1
   * @return rootLog
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The unique identifier of this entity.")

  public Long getRootLog() {
    return rootLog;
  }


  public void setRootLog(Long rootLog) {
    this.rootLog = rootLog;
  }


  public FilterLogsOptions tag(FilterLogsTagOptions tag) {
    
    this.tag = tag;
    return this;
  }

   /**
   * Get tag
   * @return tag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FilterLogsTagOptions getTag() {
    return tag;
  }


  public void setTag(FilterLogsTagOptions tag) {
    this.tag = tag;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FilterLogsOptions filterLogsOptions = (FilterLogsOptions) o;
    return Objects.equals(this.origin, filterLogsOptions.origin) &&
        Objects.equals(this.parentLog, filterLogsOptions.parentLog) &&
        Objects.equals(this.rootLog, filterLogsOptions.rootLog) &&
        Objects.equals(this.tag, filterLogsOptions.tag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(origin, parentLog, rootLog, tag);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FilterLogsOptions {\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    parentLog: ").append(toIndentedString(parentLog)).append("\n");
    sb.append("    rootLog: ").append(toIndentedString(rootLog)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

